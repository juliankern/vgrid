/**
 * helper mixin to absolutely maximize an element
 *
 * @author Julian Kern <mail@juliankern.com>
 *
 * @param  {number} $distance: 0             distance to parent - can be negative
 */
@mixin vgrid-absolute-fill($distance: 0) {
    position: absolute;
    left: $distance;
    top: $distance;
    right: $distance;
    bottom: $distance;
}

/**
 * helper mixin to generate show classes
 *
 * @author Julian Kern <mail@juliankern.com>
 */
@mixin _vgrid-show-element() {
    display: block;

    @if featureEnabled(adv-visibility) {
        @each $type in (block, inline-block, inline) {
            &#{vgrid-naming(separator)}#{$type} {
                display: $type;
            }
        }
    }
}

/**
 * helper mixin to hide elements
 *
 * @author Julian Kern <mail@juliankern.com>
 */
@mixin _vgrid-hide-element() {
    display: none;
}

/**
 * mixin to generate media queries
 *
 * @author Julian Kern <mail@juliankern.com>
 *
 * @param  {string} $minmax:     min           type of media query - can be: min, max, eq
 * @param  {string} $breakpoint: xsmall        breakpoint key
 * @param  {bool}   $fallback:   true          if the media query should fallback e.g. to min is max isn't present
 */
@mixin vgrid-mq($params: (min xsmall), $fallback: true) {
    $minmax: nth($params, 1);
    $breakpoint: null;

    @if length($params) == 2 {
        $breakpoint: nth($params, 2);
    }

    $mediaquery: vgrid-getMediaQuery($minmax, $breakpoint, $fallback);

    @if $minmax == touch or $minmax == no-touch {
        #{$mediaquery} {
            @content;
        }
    }
    @else {
        @media #{$mediaquery} {
            @content;
        }
    }
}
