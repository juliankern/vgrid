/**
 * mixin for generating the outer container of the grid
 *
 * @author Julian Kern <mail@juliankern.com>
 */
@mixin vgrid-generate-container() {
    margin: 0 auto;
    box-sizing: border-box;

    @each $bpkey in vgrid-getBreakpointList() {
        @if not(vgrid-getBreakpointValue($bpkey, virtual) == true) {
            @include vgrid-mq(min $bpkey, false) {
                $padding: vgrid-getBreakpointLength($bpkey, padding);

                @if not(vgrid-featureEnabled(fluid)) {
                    width: vgrid-getBreakpointLength($bpkey, content);
                }

                padding-left: $padding;
                padding-right: $padding;
            }
        }
    }
}

/**
 * mixin for generating a row
 *
 * @author Julian Kern <mail@juliankern.com>
 */
@mixin vgrid-generate-row() {
    box-sizing: border-box;

    @if vgrid-isMode(flex) {
        display: flex;
        flex: 0 1 auto;
        flex-direction: row;
        flex-wrap: wrap;

        @if vgrid-getConfigValue(origin) == 'right' {
            justify-content: flex-end;
            text-align: end;
        } @elseif vgrid-getConfigValue(origin) == 'center' {
            justify-content: center;
            text-align: center;
        }
    } @else {
        position: relative;
        overflow: hidden;
    }

    @each $bpkey in vgrid-getBreakpointList() {
        @if not(vgrid-getBreakpointValue($bpkey, virtual) == true) {
            @include vgrid-mq(min $bpkey, false) {
                $margin: vgrid-getBreakpointValue($bpkey, gutter);
                margin-left: $margin * 0.5 * -1;
                margin-right: $margin * 0.5 * -1;
            }
        }
    }
}

/**
 * mixin for generating one single column
 *
 * @author Julian Kern <mail@juliankern.com>
 *
 * @param  {number} $number number of the column to generate
 */
@mixin vgrid-generate-single-column($number) {
    box-sizing: border-box;

    @if vgrid-isMode(flex) {
        flex: 0 0 auto;

        @if vgrid-getConfigValue(origin) == 'right' {
            justify-content: flex-end;
            text-align: end;
        }
    } @else {
        float: #{vgrid-getConfigValue(origin)};
        position: relative;
        width: 100%;
    }

    @each $bpkey in vgrid-getBreakpointList() {
        @if not(vgrid-getBreakpointValue($bpkey, virtual) == true) {
            @include vgrid-mq(min $bpkey, false) {
                $padding: vgrid-getBreakpointValue($bpkey, gutter);
                padding-left: $padding * 0.5;
                padding-right: $padding * 0.5;

                @include vgrid-generate-column($number, vgrid-getBreakpointValue($bpkey, columnCount));

                @if vgrid-isMode(flex) {
                    flex-grow: 1;
                }
            }
        }
    }
}

/**
 * mixin for generating the columns
 *
 * @author Julian Kern <mail@juliankern.com>
 */
@mixin vgrid-generate-columns() {
    $sel: &;
    $sel: '#{$sel}';

    @at-root [class*="#{str-slice($sel, 2)}#{vgrid-naming(separator)}"] {
        box-sizing: border-box;

        @if vgrid-isMode(flex) {
            flex: 0 0 100%;

            @if vgrid-getConfigValue(origin) == 'right' {
                justify-content: flex-end;
                text-align: end;
            }
        } @else {
            float: #{vgrid-getConfigValue(origin)};
            position: relative;
            width: 100%;
        }
    }

    @each $bpkey in vgrid-getBreakpointList() {
        @if not(vgrid-getBreakpointValue($bpkey, virtual) == true) {
            @include vgrid-mq(min $bpkey, false) {
                @at-root [class*="#{str-slice($sel, 2)}#{vgrid-naming(separator)}"] {
                    $padding: vgrid-getBreakpointValue($bpkey, gutter);
                    padding-left: $padding * 0.5;
                    padding-right: $padding * 0.5;
                }

                @for $i from 1 through vgrid-getBreakpointValue($bpkey, columnCount) {
                    &#{vgrid-naming(separator)}#{$bpkey}#{vgrid-naming(separator)}#{$i} {
                        @include vgrid-generate-column($i, vgrid-getBreakpointValue($bpkey, columnCount));
                    }
                }

                @if vgrid-isMode(flex) {
                    &#{vgrid-naming(separator)}#{$bpkey} {
                        flex-basis: 0;
                        flex-grow: 1;
                        max-width: 100%;
                    }
                }

                @if vgrid-featureEnabled(offset) {
                    @for $i from 1 through vgrid-getBreakpointValue($bpkey, columnCount) {
                        &#{vgrid-naming(separator)}#{vgrid-naming(offset)}#{vgrid-naming(separator)}#{$bpkey}#{vgrid-naming(separator)}#{$i} {
                            @include vgrid-generate-column-offset($i, vgrid-getBreakpointValue($bpkey, columnCount));
                        }
                    }
                }
            }
        }
    }
}

/**
 * mixin for generating one specific column
 *
 * @author Julian Kern <mail@juliankern.com>
 *
 * @param  {number} $n number of the column to generate
 */
@mixin vgrid-generate-column($n, $columnCount) {
    $width: (100% / $columnCount) * $n;

    @if $width > 100% {
        $width: 100%;
    }

    @if vgrid-isMode(flex) {
        max-width: $width;
        flex-basis: $width;
    } @else {
        width: $width;
    }
}

/**
 * mixin for generating the column offset
 *
 * @author Julian Kern <mail@juliankern.com>
 *
 * @param  {number} $n number of the column to generate
 */
@mixin vgrid-generate-column-offset($n, $columnCount) {
    $width: (100% / $columnCount) * $n;

    margin-#{vgrid-getConfigValue(origin)}: $width;
}

/**
 * generates the hiding class for visibility
 *
 * @author Julian Kern <mail@juliankern.com>
 */
@mixin vgrid-generate-visibility-hide() {
    @each $bpkey in vgrid-getBreakpointList() {
        @include vgrid-mq(min $bpkey, false) {
            &#{vgrid-naming(separator)}#{$bpkey} {
                display: none;
            }
        }
    }
}

/**
 * mixin for generating the visibility
 *
 * @author Julian Kern <mail@juliankern.com>
 */
@mixin vgrid-generate-visibility() {
    $selectorBase: '.#{vgrid-naming(prefix)}';

    @if vgrid-featureEnabled(visibility) {
        @each $bpkey in vgrid-getRederableBreakpointList() {
            @include vgrid-mq(min $bpkey, false) {
                $showSelector: ();
                $hideSelector: ();

                @each $bpkeynew in vgrid-getBreakpointList() {
                    @if $bpkey == $bpkeynew {
                        $showSelector: append($showSelector, #{$selectorBase}#{vgrid-naming(show)}#{vgrid-naming(separator)}#{$bpkeynew}#{vgrid-naming(separator)}#{vgrid-naming(only)}, 'comma');
                    }
                    @else {
                        $showSelector: append($showSelector, #{$selectorBase}#{vgrid-naming(hide)}#{vgrid-naming(separator)}#{$bpkeynew}#{vgrid-naming(separator)}#{vgrid-naming(only)}, 'comma');
                    }
                }

                @each $bpkeynew in vgrid-getBreakpointList() {
                    @if $bpkey == $bpkeynew {
                        $hideSelector: append($hideSelector, #{$selectorBase}#{vgrid-naming(hide)}#{vgrid-naming(separator)}#{$bpkeynew}#{vgrid-naming(separator)}#{vgrid-naming(only)}, 'comma');
                    }
                    @else {
                        $hideSelector: append($hideSelector, #{$selectorBase}#{vgrid-naming(show)}#{vgrid-naming(separator)}#{$bpkeynew}#{vgrid-naming(separator)}#{vgrid-naming(only)}, 'comma');
                    }
                }

                #{$showSelector} {
                    @include _vgrid-show-element();
                }

                #{$hideSelector} {
                    @include _vgrid-hide-element();
                }
            }
        }
    }

    @if vgrid-featureEnabled(retina) {
        @include vgrid-mq(retina) {
            #{$selectorBase}#{vgrid-naming(show)}#{vgrid-naming(separator)}#{vgrid-naming(retina)},
            #{$selectorBase}#{vgrid-naming(hide)}#{vgrid-naming(separator)}#{vgrid-naming(no-retina)} {
                @include _vgrid-show-element();
            }

            #{$selectorBase}#{vgrid-naming(hide)}#{vgrid-naming(separator)}#{vgrid-naming(retina)},
            #{$selectorBase}#{vgrid-naming(show)}#{vgrid-naming(separator)}#{vgrid-naming(no-retina)} {
                @include _vgrid-hide-element();
            }
        }

        @include vgrid-mq(no-retina) {
            #{$selectorBase}#{vgrid-naming(show)}#{vgrid-naming(separator)}#{vgrid-naming(retina)},
            #{$selectorBase}#{vgrid-naming(hide)}#{vgrid-naming(separator)}#{vgrid-naming(no-retina)} {
                @include _vgrid-hide-element();
            }

            #{$selectorBase}#{vgrid-naming(hide)}#{vgrid-naming(separator)}#{vgrid-naming(retina)},
            #{$selectorBase}#{vgrid-naming(show)}#{vgrid-naming(separator)}#{vgrid-naming(no-retina)} {
                @include _vgrid-show-element();
            }
        }
    }

    @if vgrid-featureEnabled(touch) {
        @include vgrid-mq(touch) {
            #{$selectorBase}#{vgrid-naming(show)}#{vgrid-naming(separator)}#{vgrid-naming(touch)},
            #{$selectorBase}#{vgrid-naming(hide)}#{vgrid-naming(separator)}#{vgrid-naming(no-touch)} {
                @include _vgrid-show-element();
            }

            #{$selectorBase}#{vgrid-naming(hide)}#{vgrid-naming(separator)}#{vgrid-naming(touch)},
            #{$selectorBase}#{vgrid-naming(show)}#{vgrid-naming(separator)}#{vgrid-naming(no-touch)} {
                @include _vgrid-hide-element();
            }
        }

        @include vgrid-mq(no-touch) {
            #{$selectorBase}#{vgrid-naming(show)}#{vgrid-naming(separator)}#{vgrid-naming(touch)},
            #{$selectorBase}#{vgrid-naming(hide)}#{vgrid-naming(separator)}#{vgrid-naming(no-touch)} {
                @include _vgrid-hide-element();
            }

            #{$selectorBase}#{vgrid-naming(hide)}#{vgrid-naming(separator)}#{vgrid-naming(touch)},
            #{$selectorBase}#{vgrid-naming(show)}#{vgrid-naming(separator)}#{vgrid-naming(no-touch)} {
                @include _vgrid-show-element();
            }
        }
    }

    @if vgrid-featureEnabled(orientation) {
        @include vgrid-mq(landscape) {
            #{$selectorBase}#{vgrid-naming(show)}#{vgrid-naming(separator)}#{vgrid-naming(landscape)},
            #{$selectorBase}#{vgrid-naming(hide)}#{vgrid-naming(separator)}#{vgrid-naming(portrait)} {
                @include _vgrid-show-element();
            }

            #{$selectorBase}#{vgrid-naming(hide)}#{vgrid-naming(separator)}#{vgrid-naming(landscape)},
            #{$selectorBase}#{vgrid-naming(show)}#{vgrid-naming(separator)}#{vgrid-naming(portrait)} {
                @include _vgrid-hide-element();
            }
        }

        @include vgrid-mq(portrait) {
            #{$selectorBase}#{vgrid-naming(show)}#{vgrid-naming(separator)}#{vgrid-naming(landscape)},
            #{$selectorBase}#{vgrid-naming(hide)}#{vgrid-naming(separator)}#{vgrid-naming(portrait)} {
                @include _vgrid-hide-element();
            }

            #{$selectorBase}#{vgrid-naming(hide)}#{vgrid-naming(separator)}#{vgrid-naming(landscape)},
            #{$selectorBase}#{vgrid-naming(show)}#{vgrid-naming(separator)}#{vgrid-naming(portrait)} {
                @include _vgrid-show-element();
            }
        }
    }
}
